<?xml version="1.0" encoding="utf-8"?>
<?xml-stylesheet type="text/css" href="rss.css" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">

<channel>
<title>Bryan's Rambles</title>
<description>Programming, Computers, Tech, and general nerdiness from the mind of Bryan</description>
<language>en-us</language>
<link>https://www.bryanjenks.xyz/rss.xml</link>
<atom:link href="https://www.bryanjenks.xyz/rss.xml" rel="self" type="application/rss+xml" />
<image>
<title>Bryan's Rambles</title>
<url>https://www.bryanjenks.xyz/favicon.ico</url>
<link>/rss.xml</link>
</image>
<!-- {post} to add a new post-->
<!-- LB -->

<item>
<title>Task management with Taskwarrior and Taskell</title>
<guid>https://bryanjenks.xyz/blog.html#task-management-with-taskwarrior-and-taskell</guid>
<pubDate>Mon, 09 Dec 2019 18:58:01 -0800</pubDate>
<description><![CDATA[
<p>Those that know me know that to keep my <b>ADHD</b> in check, i need/use a variety of task management strategies. </p><br/>

<p>It used to be post it notes everywhere, and a bullet journal, and to a point a lot of these things were very effective for me and to some degree or in some form i still make use of them.</p><br/>

<p>But what about a comprehensive task management system for complicated projects, or multiple projects, with timeframe, dependencies, notes on tasks, or links to additional resources, burndown reports, or other types of reports, and most of all, in the command line, using just text in the terminal, that is both user friendly, and in an exportable data format and not a proprietary one? Enter <b>TaskWarrior</b>. This program is a behemoth of complexity but <b>can</b> be used simply. There is a plethora of functionality and unlimited possibilities for workflows that you can do with task warrior and it is a <b>Great</b> tool for more complicated project management.</p><br/>

<p>With taskwarrior you also have the option of having extentions added to the program to extend the functionality of the program and in my case one such program i use frquently is called <code>taskopen</code> i use this to change the notes on the tasks to open markdown documents as the annotations so that each task can include a whole page of notes or more, and beyond markdown if you set the annotation to a URL taskopen will open the link in our default browser. The combo of taskwarrior with taskopen was a game changer for me.</p><br/>

<p>Now with all that firepower sometimes with that increased complexity comes increased distraction which is what happened in my case. Taskwarrior is great but it was a little much for my daily chore and errand list and what other little items i wanted to deal with. It would have been better suited for a work environment for me personally. A program that <b>does</b> however fit my more basic needs in this regard is <code>taskell</code> its a task management program written in haskell, and it provides the ability to manage your tasks in a way that i like best: <em>Kanban</em>. So taskell is an ncurses based terminal application that is driven by a single markdown document, (though it is possible to use trello as a back end, only to populate the board initially) and have your tasks displayed in the kanban swimlanes.</p><br/>

<p>Using Vim keybindings you can move, delete, update, undo, etc. to each of your tasks. Tasks can have due dates, sub tasks, &amp; descriptions. It's just a more visual way of displaying and managing the tasks and information i need to quickly process and complete.</p><br/>

<p>So thats what i use primarily for my task managment day to day, Taskwarrior, and taskell, you can watch my video about these programs here: <a href="https://youtu.be/Z3FtJ9xzn0g">Task Management Video</a>.</p><br/>
]]></description>
</item>


<item>
<title>This website bryanjenks.xyz</title>
<guid>https://bryanjenks.xyz/blog.html#this-website-bryanjenksxyz</guid>
<pubDate>Mon, 09 Dec 2019 18:57:59 -0800</pubDate>
<description><![CDATA[
<p>So my website has suddenly just come together this weekend, out of a mix of boredom, insomnia, and my hyper focus gone awry, so i now finally have a home page up, with the <code>LB</code> script i also finaly have a blogging system in place that is light weight enough to be managable and have me post regularly on it, and as the posts continue i can continue to play with my <code>c3.js</code> chart. </p><br/>

<p>im highly enjoying the blog post writing with <code>LB</code> and intend to continue to use it more with my code discoveries, as well as my youtube videos and general blathering</p><br/>
]]></description>
</item>


<item>
<title>Neomutt, Email in the Terminal</title>
<guid>https://bryanjenks.xyz/blog.html#neomutt-email-in-the-terminal</guid>
<pubDate>Mon, 09 Dec 2019 18:57:54 -0800</pubDate>
<description><![CDATA[
<p>So i found neomutt and in general all things command line/terminal/larbs/linux, through <a href="www.lukesmith.xyz">Luke Smith</a> and i have come to adore neomutt.</p><br/>

<p>Neomutt makes my email so much easier to manage while on the same point making its faster, and minimizing my distraction with it because its just a text based application in the terminal so i dont get slowed down by loading internet resources or tracking cookies, and im more likely to just write my email and get on with my life. It's a kind of forced simplicity through digital minimalism.</p><br/>

<p>One thing i love most about neomutt is the <code>Vim</code> keybindings that work well with this whole system and realm of things, but also how easy it is to just pop into an email, open something, move something, delete something, etc. It's just another addition of efficiency in my life using text based terminal applications with <code>Vim</code> keybindings.</p><br/>

<p>I do notice that i personally have issues opening images with neomutt, im not sure what the problem is with that yet, but thus far it hasn't really effected or bothered me too much because i dont do a lot of email image viewing. I have made a youtube video on neomutt, and you can find that here: <a href="https://youtu.be/BJrZP1otDW4">Neomutt Video</a> </p><br/>

<p>Life is better in the terminal, and the more i use this system, the more i like it.</p><br/>
]]></description>
</item>


<item>
<title>tellico library page on site</title>
<guid>https://bryanjenks.xyz/blog.html#tellico-library-page-on-site</guid>
<pubDate>Sun, 08 Dec 2019 22:28:26 -0800</pubDate>
<description><![CDATA[
<p>So i have a video coming out soon on youtube about the program tellico, and with this FOSS program, im able to keep collections of items like a collection of books and their details. This program being FOSS the data isnt held in a proprietary format and im even able to export it to <code>HTML</code> and with this i took what styling the default export format had on it, reverse engineered it into <code>SASS</code> code and changed the colors to fit my website theme and so now i have a filterable, sortable table of my books in my library all on my site now.</p><br/>

<p>This is one of those hacky text based projects that once you work out the kinks, <b>REALLY</b> makes you appreciate Vim and general text editing tools. this just saved me a ton of time and manual work, and once i update my library in tellico i can just copy a paste a few lines of code over for the nav bar and some style sheet references and im good to go!</p>
]]></description>
</item>






<item>
<title>Luke Smith's LB 'Lightweight Blog' Script</title>
<guid>https://www.bryanjenks.xyz/blog.html#luke-smiths-lb-lightweight-blog-script</guid>
<pubDate>Sun, 08 Dec 2019 16:55:27 -0800</pubDate>
<description><![CDATA[
<p>So i finally got around to looking into <a href="www.lukesmith.xyz">Luke</a>'s <code>LB</code> script for blogging on a custom website like his. I gotta say that it <b>IS</b> so much nicer to use that script than doing what i was doing before...</p>

<p>Before <code>LB</code> this was my process:</p>
<br/>
<ul>
	<li>Write a draft post page</li>
	<li>Add preview page to the blog roll</li>
	<li>Add post to the blog index</li>
	<li>Add post to the <i>rss.xml</i> document<li>
</ul>
<br/>
<p>and all of this occurred in any order, it was a hassle and a waste of brain processing power to keep having to think in so many directions with all the file interations.</p>

<p>I read the readme, and edited the shell script and this very first post is made with the <code>LB</code> shell script, and im already in love with it! i think i'll make a youtube video on it soon.</p>
]]></description>
</item>

<item>
  <title>Rust, Clang, Python, Oh My!</title>
  <pubDate>Mon, 2019 Dec 2nd 06:27 GMT-8</pubDate>
  <description>
    <p>
      It's been a bit, i promise that i was intending to post more often than this
      but i've had a lot going on, as im sure most do during the holidays.
    </p><br/>
    <p>
      So i have been playing around with <code>C</code>, <code>Rust</code>, and
      <code>Python</code> to see what i like about the languages. As with most
      programmers i feel, i learn best working with project based learning but my
      problem is that i cant think of projects i <b>really</b> want to make. I
      personally work best with business use cases and feel i learn best when im
      hacking on something at work for a reason that benefits my workplace or
      improves some facet of operations.
    </p><br/>
    <p>
      I really like a lot of things about <code>Rust</code> and the
      <code>Rust</code> Community, namely how well documented it is, how many
      resources are out there for it, how much is being done for it's development,
      the emphasis on security, and interfaces with <code>C</code> code to begin
      migration to a more secure memory safe codebase. There's a lot to like about
      it but really i just don't really have a project idea in mind to tackle with
      it, but it does seem interesting, and to be a part of something that is just
      developing is always appealing to me.
    </p><br/>
    <p>
      I hope that i eventually get the time to invest and actually find a project i
      want to work on with <code>Rust</code> because it seems like a cool language
      to develop with. All that said what have i actually been up to these days?
      well i've definitely been procrastinating on my websites development, i
      technically dont even have a homepage created yet, its just the blog stuff
      that's up and running so thats kind of sad, i really need to finish the home
      page...
    </p><br/>
    <p>
      What i have been working on is a lot of work related use cases and
      programming,
    </p><br/>
    <ul>
      <li><code>T-SQL</code> For querying an enterprise wide data warehouse</li>
      <li><code>R</code>* For all things stats, data analysis and data viz</li>
      <li>
        <code>HTML, CSS, JS</code> The web stack is weirdly coming in handy in this
        new role for some work
      </li>
      <li>
        <code>CCL</code> Cerner Command Language basically SQL with other stuff
        included to use for medical software querying
      </li>
      <li>
        And lots of other one off items and things for general development practices
      </li>
    </ul><br/>
    <p>
    *with <code>R</code> i actually got a connection set up to the data warehouse so
    i can effectively query directly from <code>RStudio</code> and just shove the
    query output into a data frame and create some data visualizations with the data
    using various packages like <code>ggplot2</code> which have yielded some cool
    results.
    </p><br/>
    <p>
      I really enjoy the <code>R</code> language and all the things it has been
      stretched to do but also its beautiful charts and visualizations as well as
      documentation it can create. I have said it before but i like with programming
      to have a product as fast as possible as it is much easier to stay motivated
      with programming to have a project or visceral product produced that you can
      refine and hack on. <code>R</code> can send email, create interactive
      dashboards, produce a variety of documentation and presentations with markdown
      syntax and <code>R</code> code. It is a quirky language but theres a lot i
      like about it and i hope to continue to use it more along with
      <code>T-SQL</code> and the front end web stack.
    </p><br/>
    <p>
      I have several videos planned for my youtube channel on various linux and
      programming things some of which are related to the topics covered here but
      ill produce a write-up for them on here
      <i>(this is me being optimistic about my ability to commit to blogging)</i>.
    </p><br/>
    <p>
      Today i actually saw in a newsletter im subscribed to for
      <code>R</code> related material, a package called <code>patchwork</code> that
      makes it easier to consolidate <code>R</code> visuals into a single image and
      group items together and i tested it out and it is great! the syntax to create
      these grouped visuals is very human friendly, here's some sample code and
      output you can run in R studio to see the result:
    </p><br/>
    <pre><code>
      ```{r patch}

    library(patchwork)
    library(ggplot2)
    # A few more plots to play with
    p1 &lt;- ggplot(mpg) + 
      geom_point(aes(hwy, displ))
    p2 &lt;- ggplot(mpg) + 
      geom_bar(aes(manufacturer, fill = stat(count))) + 
      coord_flip()
    p3 &lt;- ggplot(mpg) + 
      geom_smooth(aes(hwy, cty)) + 
      facet_wrap(~year)
    p4 &lt;- ggplot(mpg) + 
      geom_tile(aes(factor(cyl), drv, fill = stat(count)), stat = 'bin2d')

    (p1 | p2) /
      p3

    layout &lt;- '
                ABB
                CCD
            '
    p1 + p2 + p3 + p4 + plot_layout(design = layout)

    ```
    </code></pre><br/>
    <p>
      As for my current projects, im still trying to finish this darn website to a
      point that is not embaressing, at work im trying to wrap my head around Shiny
      dashboards developed as <code>R</code> packages with
      <code>testthat</code> unit tests and all.
    </p><br/>
    <p>
      i guess that is all for now, always a lot going on but im just trying to
      increase my programming skills while maintaining my health and fitness, which
      means at home i try to prioritize health and fitness and at work i hope for
      business use cases to sharpen my programming skills so that i can devote more
      of my personal time to exercise and health to support the worklife. Lately its
      been the keto diet, a calisthenics program by <b>FitnessFAQ</b> on youtube,
      which i am <b>LOVING</b> with nightly 3mi walks and sometimes longer hikes on
      the weekends with the lady.
    </p><br/>
    <p>
      well thats enough rambling for now, if you'd like to ever change just shoot me
      an email at
      <a href="mailto:bryanjenks@protonmail.com">bryanjenks@protonmail.com</a>.
    </p><br/>
    <p>cheers!</p>
    </description>
</item>
<item>
    <title>Hello World!</title>
    <pubDate>Sun, 2019 Nov 10th 19:52 GMT-8</pubDate>
    <description>
    <p>
        So ive decided to start a blog on this website, and talk about my various doings and interests. To start, what am i currently up to?
    </p><br/>
    <p>
        Currently i am working on developing my javascript skills and using front end web technologies at work to develop i guess what you'd consider embedded web apps in my agency's medical software. I find it all very fascinating, so far ive had to learn about Jquery, D3, C3, and Datatable.js. I really enjoyed the data visualization of C3 JS and the easier syntax than D3 code, so i even incorporated a chart onto this site for the sake of see blogpost volume.
    </p><br/>
    <p>
        As of now i am currently working on learning HTML, SASS/CSS, JavaScript for the embedded web applications, 2 different types of SQL for database queries and API JSON returns to use in these web app visualizations, and also using R for mostly documentation right now, but i hope to get to learn R better with business use cases like shiny dashboard creation, and R Markdown reports and actual statistics and analytics. 
    </p><br/>
    <p>
        At home i am looking at more Javascript type stuff like higher order array methods, and ES6 related functions to see if i can test them in my agency's software and take advantage of them, and also wanting to see if a framework like Vue.js could potentially work for the purposes of what is needed. I also want to try my hand at TDD (Test Driven Development) and develop unit tests for our Javascript files and see if we can make a very robust system for testing and refactoring. 
    </p><br/>
    <p>
        At home i am studying more Linux things as im running an arch system thanks to <a href='http://www.lukesmith.xyz'>Luke Smith</a>'s <a href='http://www.larbs.xyz'>LARBS script</a>. I love the system that luke developed and ive been adding and removing things to it to suit my needs as i go and ive been loving it. Ive completely migrated from my windows system to this system and terminal applications. With terminal applications came the fascination with lower level terminal programming and console related applications, so ive been now attempting to learn C-lang, and to better use my current system ive also been studying Bash scripting and general commands and this whole site is really inspired by luke's and the ability to have an RSS feed with these posts in them to read in newsboat. 
    </p><br/>
    <p>
        Well i have a lot going on lately but i hope to make more of these posts and enjoy this process a time goes on. some of the next tasks are to fix some things on this site, and once this site is really up and running, i plan to leave facebook and hopefully experience more digital minimalism. I'd also like to just feel like i can read more and work on my leather work projects without always being distracted by the digital world, but knowing nerdy me this is an impossibility. Well for now thats all, and i will return with further ramblings in the future!
    </p>
    </description>
</item>
</channel>
</rss>
